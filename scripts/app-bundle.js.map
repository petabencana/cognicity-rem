{"version":3,"sources":["api.js","app.js","environment.js","home.js","main.js","map.js","utils.js","resources/index.js","resources/value-converters/flood-state.js","resources/elements/loading-indicator.js"],"names":["topojson","DATA_URL","dataUrl","auth","headers","localStorage","getItem","convertTopoToGeo","data","Promise","resolve","reject","result","type","Error","geojson","feature","objects","output","API","http","isRequesting","getFloods","fetch","then","response","status","json","catch","err","getFloodStates","getInfrastructure","getReports","AUTH0_CLIENT_ID","AUTH0_DOMAIN","App","api","i18n","router","lock","Auth0Lock","allowSignUp","isAuthenticated","isEditor","username","self","profile","JSON","parse","app_metadata","role","email","on","authResult","getProfile","idToken","error","setItem","stringify","hide","navigate","configureRouter","config","title","tr","options","pushState","root","map","route","moduleId","name","login","show","logout","removeItem","debug","testing","floodStates","level","severity","levelDescription","mapConfig","region","reports_refresh","bounds","sw","ne","basemaps","url","default","attribution","detectRetina","minZoom","maxZoom","ext","infrastructure","Home","message","configure","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","developmentLogging","plugin","instance","i18next","setup","backend","loadPath","lng","attributes","fallbackLng","start","setRoot","L","highlightFeature","e","layer","target","setStyle","weight","color","dashArray","fillOpacity","Browser","ie","opera","edge","bringToFront","Map","defaultBindingMode","twoWay","pageSize","loading","refreshing","selectedDistrict","selectedArea","mapHeight","window","innerHeight","tableHeight","attached","attributionControl","fitBounds","basemapLayers","basemap","tileLayer","addTo","layerPromises","floods","floodLayer","GeoJSON","style","stroke","opacity","properties","state","onEachFeature","_leaflet_id","area_id","mouseover","mouseout","resetStyle","click","getBounds","districts","find","element","parent_name","areas","$isSelected","tableApi","revealItem","populateDistricts","reportsLayer","pointToLayer","latlng","marker","icon","iconUrl","iconSize","iconAnchor","refreshFloodReports","setTimeout","infrastructureLayers","push","all","control","layers","position","collapsed","canActivate","floodsObj","features","flood","parents","Object","keys","sort","parent","a","b","area_name","refreshFloodStates","clearLayers","addData","setState","clearStates","areaSelectedInTable","$event","detail","row","jwtDecode","tokenIsExpired","jwt","jwtExp","exp","expiryDate","Date","setUTCSeconds","globalResources","FloodStateValueConverter","toView","value","nprogress","showSpinner","LoadingIndicator","defaultValue","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject } from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-fetch-client';\n\nimport * as topojson from 'topojson-client';\n\n// Import environment variables\nimport env from './environment';\n\n// URL for Cognicity Data API\nconst DATA_URL = env.dataUrl;\n\n// Authentication headers\nconst auth = { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('id_token') } };\n\n// Convert topjson to geojson\nconst convertTopoToGeo = (data) => new Promise((resolve, reject) => {\n  if (!data || !data.result || data.result.type != 'Topology')\n    reject(new Error('Unexpected response from data server'));\n  let geojson = topojson.feature(data.result, data.result.objects.output);\n  resolve(geojson);\n});\n\n// Wrapper class for API calls to Cognicity Data API\n@inject(HttpClient)\nexport class API {\n\n  // Initialize requesting status\n  isRequesting = false;\n\n  // Build the class injecting the HTTP client\n  constructor(http) {\n    this.http = http;\n  }\n\n  // Get floods as topojson, return geojson\n  getFloods = () => new Promise((resolve, reject) => {\n    return this.http.fetch(`${DATA_URL}/floods?city=jbd`, auth)\n    .then((response) => {\n      if (response.status >= 400) reject(new Error('Unexpected error updating floods'));\n      response.json().then((data) => resolve(convertTopoToGeo(data)));\n    })\n    .catch((err) => {\n      reject(new Error('Error updating floods', err));\n    });\n  });\n\n  // Get the latest flood states as json\n  getFloodStates = () => new Promise((resolve, reject) => {\n    return this.http.fetch(`${DATA_URL}/floods/states?city=jbd&minimum_state=1`, auth)\n    .then((response) => {\n      if (response.status >= 400) reject(new Error('Unexpected updating flood states'));\n      response.json().then((data) => resolve(data));\n    })\n    .catch((err) => {\n      reject(new Error('Error updating flood states', err));\n    });\n  });\n\n  // Get infrastructure as topojson, return geojson\n  getInfrastructure = (type) => new Promise((resolve, reject) => {\n    return this.http.fetch(`${DATA_URL}/infrastructure/${type}`, auth)\n    .then((response) => {\n      if (response.status >= 400) reject(new Error('Unexpected updating infrastructure'));\n      response.json().then((data) => resolve(convertTopoToGeo(data)));\n    })\n    .catch((err) => {\n      reject(new Error('Error updating infrastructure', err));\n    });\n  });\n\n  // Get floods as topojson, return geojson\n  getReports = () => new Promise((resolve, reject) => {\n    return this.http.fetch(`${DATA_URL}/reports?city=jbd`, auth)\n    .then((response) => {\n      if (response.status >= 400) reject(new Error('Unexpected updating flood reports'));\n      response.json().then((data) => resolve(convertTopoToGeo(data)));\n    })\n    .catch((err) => {\n      reject(new Error('Error updating flood reports', err));\n    });\n  });\n\n}\n","import { inject } from 'aurelia-framework';\nimport { I18N } from 'aurelia-i18n';\n\nimport { API } from './api';\nimport { tokenIsExpired } from './utils';\nimport { Router } from 'aurelia-router';\n\n// TODO: Move into environment variables\n// TODO: Check credentials and log an error if incorrect\n// const AUTH0_CLIENT_ID = 'REPLACE_WITH_ACTUAL_CLIENT_ID';\nconst AUTH0_CLIENT_ID = 'ApdfZvV1BrxXmwdg6Djrle4m2nav5ub9';\nconst AUTH0_DOMAIN = 'petabencana.au.auth0.com';\n\n// Check credentials are supplied otherwise throw error\nif (!AUTH0_CLIENT_ID || !AUTH0_DOMAIN) throw new Error('Auth0 credentials are required');\n\n@inject(API, I18N, Router)\nexport class App {\n\n  // Setup the Lock, disabling the signup option\n  lock = new Auth0Lock(AUTH0_CLIENT_ID, AUTH0_DOMAIN, {\n    allowSignUp: false\n  });\n  isAuthenticated = false;\n  isEditor = false;\n  username = null;\n\n  constructor(api, i18n, router) {\n    this.api = api;\n    this.i18n = i18n;\n    this.router = router;\n    let self = this;\n\n    // If the token has expired log the user out\n    if (tokenIsExpired()) {\n      this.isAuthenticated = false;\n      this.isEditor = false;\n      this.username = null;\n    } else {\n      this.isAuthenticated = true;\n      let profile = localStorage.getItem('profile');\n      if (profile) {\n        profile = JSON.parse(profile);\n        this.isEditor = profile.app_metadata && profile.app_metadata.role === 'editor';\n        this.username = profile.email;\n      }\n    }\n\n    // Once authenticated save the id_token and profile to local storage\n    this.lock.on('authenticated', (authResult) => {\n      self.lock.getProfile(authResult.idToken, (error, profile) => {\n        if (error) {\n          // Handle error\n          return;\n        }\n        localStorage.setItem('id_token', authResult.idToken);\n        localStorage.setItem('profile', JSON.stringify(profile));\n        self.isEditor = profile.app_metadata && profile.app_metadata.role === 'editor';\n        self.username = profile.email;\n        self.isAuthenticated = true;\n        self.lock.hide();\n        // Redirect to the map view\n        this.router.navigate('map');\n      });\n    });\n  }\n\n  configureRouter(config, router) {\n    config.title = this.i18n.tr('title');\n    config.options.pushState = true;\n    config.options.root = '/';\n    config.map([\n      { route: '', moduleId: 'home', name: 'home', title: 'Home' },\n      { route: 'map', moduleId: 'map', name: 'map', title: 'Map' }\n    ]);\n    this.router = router;\n  }\n\n  login() {\n    this.lock.show();\n  }\n\n  logout() {\n    localStorage.removeItem('profile');\n    localStorage.removeItem('id_token');\n    this.isAuthenticated = false;\n    // Redirect to the home view\n    this.router.navigate('');\n  }\n}\n","export default {\n  debug: true,\n  testing: true,\n  dataUrl: 'https://data-dev.petabencana.id',\n  floodStates: [\n    {\n      level: null,\n      severity: 'Clear',\n      levelDescription: 'NO FLOODING'\n    },\n    {\n      level: 1,\n      severity: 'Unknown',\n      levelDescription: 'AN UNKNOWN LEVEL OF FLOODING - USE CAUTION -'\n    },\n    {\n      level: 2,\n      severity: 'Minor',\n      levelDescription: 'FLOODING OF BETWEEN 10 and 70 CENTIMETERS'\n    },\n    {\n      level: 3,\n      severity: 'Moderate',\n      levelDescription: 'FLOODING OF BETWEEN 71 and 150 CENTIMETERS'\n    },\n    {\n      level: 4,\n      severity: 'Severe',\n      levelDescription: 'FLOODING OF OVER 150 CENTIMETERS'\n    }\n  ],\n  mapConfig: {\n    region: 'jbd',\n    reports_refresh: 60000, // Reports will refresh every 60 seconds\n    bounds: {\n      sw: [-6.733, 106.480],\n      ne: [-5.880, 107.175]\n    },\n    basemaps: [\n      {\n        name: 'Mapbox',\n        url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}.{ext}',\n        default: true,\n        options: {\n          attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OSM</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC BY-SA</a>, Imagery &copy; <a href=\"http://mapbox.com\">Mapbox</a>',\n          detectRetina: true,\n          minZoom: 0,\n          maxZoom: 18,\n          ext: 'png'\n        }\n      }\n    ],\n    infrastructure: [\n      {\n        type: 'floodgates',\n        name: 'Flood Gates',\n        default: true\n      },\n      {\n        type: 'pumps',\n        name: 'Pumps',\n        default: false\n      },\n      {\n        type: 'waterways',\n        name: 'Waterways',\n        default: false\n      }\n    ],\n  }\n};\n","export class Home {\n  constructor() {\n    this.message = 'Welcome Home';\n  }\n}\n","import environment from './environment';\nimport Backend from 'i18next-xhr-backend';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n  .standardConfiguration()\n  .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.use\n    .plugin('aurelia-table')\n    .plugin('aurelia-i18n', (instance) => {\n      instance.i18next.use(Backend);\n      return instance.setup({\n        backend: {\n          loadPath: './locales/{{lng}}/{{ns}}.json'\n        },\n        lng: 'id',\n        attributes: ['t', 'i18n'],\n        fallbackLng: 'en',\n        debug: true\n      });\n    });\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { bindable, bindingMode, inject } from 'aurelia-framework';\nimport { Redirect } from 'aurelia-router';\nimport { I18N } from 'aurelia-i18n';\n\nimport * as L from 'leaflet';\n\nimport { API } from './api';\nimport { tokenIsExpired } from './utils';\n\n// Import environment variables\nimport env from './environment';\n\n// Read map config from environment\nconst config = env.mapConfig;\n\n// Highlight a specific feature\nconst highlightFeature = (e) => {\n  let layer = e.target;\n  layer.setStyle({\n    weight: 5,\n    color: '#666',\n    dashArray: '',\n    fillOpacity: 0.7\n  });\n  if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n    layer.bringToFront();\n  }\n}\n\n@inject(API, I18N)\nexport class Map {\n\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) selectedDistrict;\n\n  constructor(api, i18n) {\n    this.api = api;\n    this.i18n = i18n;\n    this.pageSize = 5;\n    this.loading = true;\n    this.refreshing = true;\n    this.selectedDistrict = null;\n    this.selectedArea = null;\n    this.floodStates = env.floodStates;\n\n    // TODO: Improve this, it is a little hacky and does not take into account user reszing their browser\n    // Map height should be a 1/3 of usable screen space (less header)\n    this.mapHeight = ( window.innerHeight * 0.66 ) - 100;\n    // Table height should be half the map height\n    this.tableHeight = this.mapHeight * 0.5;\n  }\n\n  attached() {\n\n    // Create map\n    this.map = L.map('mapContainer', {\n      attributionControl: false\n    }).fitBounds([config.bounds.sw, config.bounds.ne]);\n\n    // Add basemaps\n    let basemapLayers = {};\n    for (let basemap of config.basemaps) {\n      // Create the layer\n      let layer = L.tileLayer(basemap.url, basemap.options).addTo(this.map);\n      // Add the layer to the basemaps object\n      basemapLayers[basemap.name] = layer;\n      // Add first basemap to map\n      basemap.default && layer.addTo(this.map);\n    }\n\n    // Keep track of all of our layer promises\n    let layerPromises = [];\n\n    // Get flood areas\n    this.api.getFloods().then((data) => {\n      this.floods = data;\n\n      // Add floods layer to map\n      this.floodLayer = new L.GeoJSON(this.floods, {\n        style: (feature) => {\n          let style = {\n            stroke: true,\n            color: 'grey',\n            weight: 1,\n            opacity: 0.5,\n            fillOpacity: 0.1\n          };\n          switch (feature.properties.state) {\n            case 1: return { ...style, color: '#fdcc8a' };\n            case 2: return { ...style, color: '#fc8d59' };\n            case 3: return { ...style, color: '#e34a33' };\n            case 4: return { ...style, color: '#b30000' };\n            default: return style;\n          }\n        },\n        onEachFeature: (feature, layer) => {\n          layer._leaflet_id = feature.area_id;\n          layer.on({\n            mouseover: highlightFeature,\n            mouseout: (e) => {\n              // Reset highlights on the flood layer\n              this.floodLayer.resetStyle(e.target);\n            },\n            click: (e) => {\n              // Zoom to a given feature\n              this.map.fitBounds(e.target.getBounds());\n              // Update the selectedDistrict with the parent district of the feature\n              this.selectedDistrict = this.districts.find((element) =>\n                element.name === e.target.feature.properties.parent_name);\n              // Select the area in the table\n              this.selectedArea = this.selectedDistrict.areas.find((element) =>\n                element.area_id === e.target.feature.properties.area_id)\n              this.selectedArea.$isSelected = true;\n              this.tableApi.revealItem(this.selectedArea);\n            }\n          });\n        }\n      });\n      this.floodLayer.addTo(this.map);\n\n      // Fit the bounds to flood layer\n      this.map.fitBounds(this.floodLayer.getBounds())\n\n      // Populate floods table\n      this.populateDistricts(this.floods);\n\n      // Updated refreshing status\n      this.refreshing = false;\n    })\n    .catch((err) => this.error = err.message);\n\n    // Create flood reports layer and add to the map\n    this.reportsLayer = new L.GeoJSON(null, {\n      pointToLayer: (feature, latlng) =>\n      L.marker(latlng, {\n        icon: L.icon({\n          iconUrl: `assets/icons/floodsIcon.svg`,\n          iconSize: [30, 30],\n          iconAnchor: [15, 15]\n        })\n      })\n    });\n    this.reportsLayer.addTo(this.map);\n\n    // Refresh flood reports layer then schedule to update automatically\n    this.refreshFloodReports();\n    setTimeout(() => this.refreshFloodReports(), config.reports_refresh);\n\n    // Add infrastructure layers\n    let infrastructureLayers = {};\n    for (let infrastructure of config.infrastructure) {\n       // Initialise object so that order is consistent\n      infrastructureLayers[infrastructure.name] = null;\n       // Call the API to get the data storing the promise in an array\n      layerPromises.push(this.api.getInfrastructure(infrastructure.type)\n        .then((data) => {\n          let layer = new L.GeoJSON(data, {\n            pointToLayer: (feature, latlng) =>\n            L.marker(latlng, {\n              icon: L.icon({\n                iconUrl: `assets/icons/${infrastructure.type}Icon.svg`,\n                iconSize: [30, 30],\n                iconAnchor: [15, 15]\n              })\n            })\n          });\n          infrastructureLayers[infrastructure.name] = layer;\n          infrastructure.default && layer.addTo(this.map);\n        })\n        .catch((err) => this.error = err.message));\n    }\n\n    // Add layers control once all layer promises have been resolved\n    Promise.all(layerPromises).then(() => {\n      L.control.layers(basemapLayers, infrastructureLayers, {\n        position: 'bottomleft',\n        collapsed: false\n      }).addTo(this.map);\n      this.loading = false;\n    })\n  }\n\n  // Can this view be activated i.e. is there a valid token?\n  canActivate() {\n    // Check if token is expired and redirect if so\n    if (tokenIsExpired()) return new Redirect('/');\n    return true;\n  }\n\n  // Populate the districts and their associated flood areas\n  populateDistricts(floods) {\n    let floodsObj = {};\n    for (let flood of this.floods.features) {\n      if (floodsObj[flood.properties.parent_name]) {\n        // If the parent exists then add another flood record to it\n        floodsObj[flood.properties.parent_name].push(flood.properties);\n      } else {\n        // Else if no parent record the create one with a new array\n        floodsObj[flood.properties.parent_name] = [flood.properties];\n      }\n    }\n\n    // Get the keys and sort them alphabetically\n    let parents = Object.keys(floodsObj);\n    parents.sort();\n\n    // Now assign all parents and their corresponding floods to an array\n    this.districts = [];\n    for (let parent of parents) {\n      this.districts.push({\n        name: parent,\n        areas: floodsObj[parent].sort((a,b) => {\n          if (a.area_name < b.area_name)\n          return -1;\n          if (a.area_name > b.area_name)\n          return 1;\n          return 0;\n        })\n      });\n    }\n  }\n\n\n  // Refresh the current flood states\n  refreshFloodStates() {\n    this.refreshing = true;\n    this.api.getReports().then((data) => {\n      this.reportsLayer.clearLayers();\n      this.reportsLayer.addData(data);\n      this.refreshing = false;\n    });\n  }\n\n  // Refresh flood reports\n  // TODO: Update report counts against areas\n  refreshFloodReports() {\n    this.api.getReports().then((data) => {\n      this.reportsLayer.clearLayers();\n      this.reportsLayer.addData(data);\n    });\n  }\n\n  // Set the state with the new state value\n  setState() {\n\n  }\n\n  // TODO: Only a user with role=editor can clear states\n  // TODO: Iterate through all non zero states and clear the state with DELETE\n  clearStates() {\n\n  }\n\n  // When an area has been selected in the table, select the area on the map\n  areaSelectedInTable($event){\n    this.selectedArea = $event.detail.row;\n    // FIXME: This interaction is not working as expected\n    // let layer = this.floodLayer.getLayer($event.detail.row.area_id);\n    // if (layer) layer.fireEvent('click');\n  }\n}\n","const jwtDecode = require('jwt-decode');\n\nexport function tokenIsExpired() {\n  let jwt = localStorage.getItem('id_token');\n  if (jwt) {\n    let jwtExp = jwtDecode(jwt).exp;\n    let expiryDate = new Date(0);\n    expiryDate.setUTCSeconds(jwtExp);\n\n    // Check date against expiry date\n    if (new Date() < expiryDate) return false;\n  }\n  return true;\n}\n","export function configure(config) {\n  config.globalResources([\n    './elements/loading-indicator', './value-converters/flood-state'\n  ]);\n}\n","import { floodStates } from '../../map';\n\n// Import environment variables\nimport env from '../../environment';\n\nexport class FloodStateValueConverter {\n  toView(value) {\n    return value ? env.floodStates[value] : '-';\n  }\n}\n","import * as nprogress from 'nprogress';\nimport { bindable, noView, decorators } from 'aurelia-framework';\n\n// Do not show the spinner\nnprogress.configure({ showSpinner: false });\n\nexport let LoadingIndicator = decorators(\n  noView(['nprogress/nprogress.css']),\n  bindable({name: 'loading', defaultValue: false})\n).on(class {\n  loadingChanged(newValue) {\n    if (newValue) {\n      nprogress.start();\n    } else {\n      nprogress.done();\n    }\n  }\n});\n"],"sourceRoot":"../src"}